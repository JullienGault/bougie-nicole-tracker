# Nom du Workflow qui apparaîtra dans l'onglet "Actions" de GitHub
name: Deploy to Firebase Hosting

# Déclencheur : ce workflow s'exécute à chaque 'push' sur la branche 'main'
on:
  push:
    branches:
      - main # ou master selon le nom de votre branche principale

# Tâches à exécuter
jobs:
  build_and_deploy:
    # Utilise la dernière version d'Ubuntu comme environnement
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupère le code de votre dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2: Installe Node.js, puis les dépendances du projet
      - name: Install dependencies
        run: npm install

      # NOUVELLE ÉTAPE: Créer le fichier .env à partir des secrets GitHub
      - name: Create .env file
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env

      # Étape 3: Construit l'application React pour la production
      # Le résultat sera dans un dossier /dist
      - name: Build project
        run: npm run build

      # Étape 4: Déploie le contenu du dossier /dist sur Firebase Hosting
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BOUGIENICOLE }}'
          channelId: live
          projectId: bougienicole
